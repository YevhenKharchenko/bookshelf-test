import"./assets/modulepreload-polyfill-3cfb730f.js";import{a as g,b as k,i as u}from"./assets/vendor-64d08f96.js";class ${constructor(){this.BASE_URL="https://books-backend.p.goit.global/books",this.CATEGORY_LIST="/category-list",this.TOP_BOOKS="/top-books",this.CATEGORY="/category?category="}async getCategories(){const e=this.BASE_URL+this.CATEGORY_LIST;try{return(await g.get(e)).data}catch(t){console.log(t),iziToast.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${t.message}`,position:"topRight"})}}async getTopBooks(){const e=this.BASE_URL+this.TOP_BOOKS;try{return(await g.get(e)).data}catch(t){console.log(t),iziToast.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${t.message}`,position:"topRight"})}}async getCategory(e){const t=this.BASE_URL+this.CATEGORY+e;try{return(await g.get(t)).data}catch(s){console.log(s),iziToast.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${s.message}`,position:"topRight"})}}async getBook(e){const t=this.BASE_URL+"/"+e;try{return(await g.get(t)).data}catch(s){console.log(s),iziToast.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${s.message}`,position:"topRight"})}}}const d=new $,h=document.querySelector(".categories-list"),c=document.querySelector(".category");document.querySelector(".shopping-list");const i=JSON.parse(localStorage.getItem("books"))||[];async function S(){try{const e=(await d.getCategories()).map(({list_name:t})=>`<a class="category-link" href=""><li>${t}</li></a>`).join("");h.insertAdjacentHTML("beforeend",e)}catch(o){console.log(o),u.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${o.message}`,position:"topRight"})}}async function E(){try{(await d.getTopBooks()).forEach(e=>{const t=`<h2>${e.list_name}</h2>`,s=`<button class="category-btn" data-category="${e.list_name}" type="button">See more</button>`,n=e.books.map(a=>`
        <div class="book" id="${a._id}">
          <img src="${a.book_image}" alt="${a.title}">
          <h3>${a.title}</h3>
          <p class="description">${a.description}</p>
          <p class="author">Author: ${a.author}</p>
          <p class="publisher"=>Publisher: ${a.publisher}</p>
          <a class="amazon-link" href="${a.amazon_product_url}" target="_blank">Buy on Amazon</a>
        </div>`).join(""),r=t+s+n;c.insertAdjacentHTML("beforeend",r)})}catch(o){console.log(o),u.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${o.message}`,position:"topRight"})}}async function m(o){try{const e=await d.getCategory(o),t=`<h2>${o}</h2>`,s=e.map(r=>`
      <div class="book" id="${r._id}">
        <img src="${r.book_image}" alt="${r.title}">
        <h3>${r.title}</h3>
        <p class="description">${r.description}</p>
        <p class="author">Author: ${r.author}</p>
        <p class="publisher">Publisher: ${r.publisher}</p>
        <a class="amazon-link" href="${r.amazon_product_url}" target="_blank">Buy on Amazon</a>
      </div>`).join(""),n=t+s;c.insertAdjacentHTML("beforeend",n)}catch(e){console.log(e),u.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${e.message}`,position:"topRight"})}}function _(o){o.preventDefault(),c.innerHTML="";const e=o.target.textContent;m(e)}function w(o){if(!o.target.classList.contains("category-btn"))return;const e=o.target.dataset.category;c.innerHTML="",m(e)}async function L(o){const e=o.target.closest(".book");if(!e)return;const t=e.id,s=e.querySelector("h3").textContent,n=e.querySelector(".description").textContent,r=e.querySelector(".author").textContent,a=e.querySelector(".publisher").textContent,l=e.querySelector("img").src,y=e.querySelector(".amazon-link").href,f={_id:t,title:s,description:n,author:r,publisher:a,book_image:l,amazon_product_url:y};if(o.target.textContent==="Add to shopping list"){if(i.find(p=>p._id===t))return;o.target.textContent="Remove from shopping list",i.push(f),localStorage.setItem("books",JSON.stringify(i))}else if(o.target.textContent==="Remove from shopping list"){const p=i.findIndex(b=>b._id===t);p!==-1&&(i.splice(p,1),localStorage.setItem("books",JSON.stringify(i)),o.target.textContent="Add to shopping list")}}h.addEventListener("click",_);c.addEventListener("click",w);c.addEventListener("click",T);S();E();async function T(o){if(o.preventDefault(),o.target.nodeName!=="IMG")return;o.stopPropagation();const e=o.target.parentNode.id;try{const t=await d.getBook(e);let s="Add to shopping list";i.findIndex(l=>l._id===t._id)>-1&&(s="Remove from shopping list");const n=`
  <li class="book" id="${t._id}">
    <img src="${t.book_image}" alt="${t.title}">
    <h3>${t.title}</h3>
    <p class="description">${t.description}</p>
    <p class="author">Author: ${t.author}</p>
    <p class="publisher">Publisher: ${t.publisher}</p>
    <a class="amazon-link" href="${t.amazon_product_url}" target="_blank">Buy on Amazon</a>
    <button class="add-btn" type="button">${s}</button>
  </li>`,r=l=>{l.code==="Escape"&&a.close()},a=k.create(n,{closable:!1,className:"modal",onShow:()=>{document.addEventListener("keydown",r),document.addEventListener("click",L)},onClose:()=>{document.removeEventListener("keydown",r)}});a.show()}catch(t){console.log(t),u.error({title:"Error",message:`Oops! Something went wrong. Please try again later or contact support if the issue persists. Error details: ${t.message}`,position:"topRight"})}}
//# sourceMappingURL=commonHelpers.js.map
